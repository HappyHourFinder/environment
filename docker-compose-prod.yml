version: '3'
services:
  bar-db:
    container_name: bar-db
    image: postgres
    environment:
      POSTGRES_DB: bar
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
        - ./data/postgres/bar:/data/postgres
    networks:
      - bar-network
    restart: unless-stopped

  happy-hour-db:
    container_name: happy-hour-db
    image: postgres
    environment:
      POSTGRES_DB: happy-hour
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
      - ./data/postgres/happy-hour:/data/postgres
    networks:
      - happy-hour-network
    restart: unless-stopped

  discovery:
    restart: always
    image: happyhourfinder/discovery
    container_name: discovery
    networks:
      - backend-network
    ports:
      - "8761:8761"

  config-server:
    restart: always
    image: happyhourfinder/config-server
    environment:
      ENCRYPT_KEY: ${CONFIG_SERVER_ENCRYPT_KEY}
      SPRING_SECURITY_USER_NAME: ${CONFIG_SERVER_USR}
      SPRING_SECURITY_USER_PASSWORD: ${CONFIG_SERVER_PWD}
    volumes:
      - ../config:/config
    networks:
      - backend-network

  zipkin:
    restart: always
    image: openzipkin/zipkin
    networks:
      - backend-network
      - monitoring-network
    ports:
      - "9411:9411"

  bar-service:
    image: happyhourfinder/bar-service
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CONFIG_SERVER_USR: ${CONFIG_SERVER_USR}
      CONFIG_SERVER_PWD: ${CONFIG_SERVER_PWD}
      SPRING_DATASOURCE_URL: jdbc:postgresql://bar-db:5432/bar
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - bar-network
      - backend-network
    depends_on:
      - bar-db
      - discovery
      - config-server
      - zipkin

  happy-hour-service:
    image: happyhourfinder/happy-hour-service
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CONFIG_SERVER_USR: ${CONFIG_SERVER_USR}
      CONFIG_SERVER_PWD: ${CONFIG_SERVER_PWD}
      SPRING_DATASOURCE_URL: jdbc:postgresql://happy-hour-db:5432/happy-hour
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - happy-hour-network
      - backend-network
    depends_on:
      - happy-hour-db
      - discovery
      - config-server
      - zipkin




  bar-composite:
    image: happyhourfinder/bar-composite
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CONFIG_SERVER_USR: ${CONFIG_SERVER_USR}
      CONFIG_SERVER_PWD: ${CONFIG_SERVER_PWD}
    networks:
      - backend-network
    depends_on:
      - discovery
      - config-server
      - zipkin

  trip-service:
    image: happyhourfinder/trip-service
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CONFIG_SERVER_USR: ${CONFIG_SERVER_USR}
      CONFIG_SERVER_PWD: ${CONFIG_SERVER_PWD}
    networks:
      - backend-network
    depends_on:
      - discovery
      - config-server
      - zipkin




  gateway:
    image: happyhourfinder/api-gateway
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CONFIG_SERVER_USR: ${CONFIG_SERVER_USR}
      CONFIG_SERVER_PWD: ${CONFIG_SERVER_PWD}
    networks:
      - backend-network
    ports:
     - "9090:9090"
    depends_on:
      - discovery
      - config-server
      - zipkin




  admin-server:
    restart: always
    image: happyhourfinder/admin
    networks:
      - backend-network
    ports:
     - "8080:8080"




  backend:
    image: tianon/true
    depends_on:
      - bar-service
      - happy-hour-service
      - bar-composite
      - gateway

  monitoring:
    image: tianon/true
    depends_on:
      - admin-server




networks:
  backend-network:
    driver: bridge
  bar-network:
    driver: bridge
  happy-hour-network:
    driver: bridge
  monitoring-network:
    driver: bridge
